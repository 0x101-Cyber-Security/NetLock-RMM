<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.AspNetCore.SignalR.Client</name>
    </assembly>
    <members>
        <member name="T:Microsoft.AspNetCore.SignalR.Client.HubConnectionBuilderHttpExtensions">
            <summary>
            Extension methods for <see cref="T:Microsoft.AspNetCore.SignalR.Client.IHubConnectionBuilder"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNetCore.SignalR.Client.HubConnectionBuilderHttpExtensions.WithStatefulReconnect(Microsoft.AspNetCore.SignalR.Client.IHubConnectionBuilder)">
            <summary>
            Configures the <see cref="T:Microsoft.AspNetCore.Http.Connections.Client.HttpConnectionOptions"/> to negotiate stateful reconnect with the server.
            </summary>
            <param name="hubConnectionBuilder">The <see cref="T:Microsoft.AspNetCore.SignalR.Client.IHubConnectionBuilder" /> to configure.</param>
            <returns>The same instance of the <see cref="T:Microsoft.AspNetCore.SignalR.Client.IHubConnectionBuilder"/> for chaining.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.SignalR.Client.HubConnectionBuilderHttpExtensions.WithUrl(Microsoft.AspNetCore.SignalR.Client.IHubConnectionBuilder,System.String)">
            <summary>
            Configures the <see cref="T:Microsoft.AspNetCore.SignalR.Client.HubConnection" /> to use HTTP-based transports to connect to the specified URL.
            </summary>
            <param name="hubConnectionBuilder">The <see cref="T:Microsoft.AspNetCore.SignalR.Client.IHubConnectionBuilder" /> to configure.</param>
            <param name="url">The URL the <see cref="T:Microsoft.AspNetCore.Http.Connections.Client.HttpConnection"/> will use.</param>
            <returns>The same instance of the <see cref="T:Microsoft.AspNetCore.SignalR.Client.IHubConnectionBuilder"/> for chaining.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.SignalR.Client.HubConnectionBuilderHttpExtensions.WithUrl(Microsoft.AspNetCore.SignalR.Client.IHubConnectionBuilder,System.String,System.Action{Microsoft.AspNetCore.Http.Connections.Client.HttpConnectionOptions})">
            <summary>
            Configures the <see cref="T:Microsoft.AspNetCore.SignalR.Client.HubConnection" /> to use HTTP-based transports to connect to the specified URL.
            </summary>
            <param name="hubConnectionBuilder">The <see cref="T:Microsoft.AspNetCore.SignalR.Client.IHubConnectionBuilder" /> to configure.</param>
            <param name="url">The URL the <see cref="T:Microsoft.AspNetCore.Http.Connections.Client.HttpConnection"/> will use.</param>
            <param name="configureHttpConnection">The delegate that configures the <see cref="T:Microsoft.AspNetCore.Http.Connections.Client.HttpConnection"/>.</param>
            <returns>The same instance of the <see cref="T:Microsoft.AspNetCore.SignalR.Client.IHubConnectionBuilder"/> for chaining.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.SignalR.Client.HubConnectionBuilderHttpExtensions.WithUrl(Microsoft.AspNetCore.SignalR.Client.IHubConnectionBuilder,System.String,Microsoft.AspNetCore.Http.Connections.HttpTransportType)">
            <summary>
            Configures the <see cref="T:Microsoft.AspNetCore.SignalR.Client.HubConnection" /> to use HTTP-based transports to connect to the specified URL and transports.
            </summary>
            <param name="hubConnectionBuilder">The <see cref="T:Microsoft.AspNetCore.SignalR.Client.IHubConnectionBuilder" /> to configure.</param>
            <param name="url">The URL the <see cref="T:Microsoft.AspNetCore.Http.Connections.Client.HttpConnection"/> will use.</param>
            <param name="transports">A bitmask combining one or more <see cref="T:Microsoft.AspNetCore.Http.Connections.HttpTransportType"/> values that specify what transports the client should use.</param>
            <returns>The same instance of the <see cref="T:Microsoft.AspNetCore.SignalR.Client.IHubConnectionBuilder"/> for chaining.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.SignalR.Client.HubConnectionBuilderHttpExtensions.WithUrl(Microsoft.AspNetCore.SignalR.Client.IHubConnectionBuilder,System.String,Microsoft.AspNetCore.Http.Connections.HttpTransportType,System.Action{Microsoft.AspNetCore.Http.Connections.Client.HttpConnectionOptions})">
            <summary>
            Configures the <see cref="T:Microsoft.AspNetCore.SignalR.Client.HubConnection" /> to use HTTP-based transports to connect to the specified URL and transports.
            </summary>
            <param name="hubConnectionBuilder">The <see cref="T:Microsoft.AspNetCore.SignalR.Client.IHubConnectionBuilder" /> to configure.</param>
            <param name="url">The URL the <see cref="T:Microsoft.AspNetCore.Http.Connections.Client.HttpConnection"/> will use.</param>
            <param name="transports">A bitmask combining one or more <see cref="T:Microsoft.AspNetCore.Http.Connections.HttpTransportType"/> values that specify what transports the client should use.</param>
            <param name="configureHttpConnection">The delegate that configures the <see cref="T:Microsoft.AspNetCore.Http.Connections.Client.HttpConnection"/>.</param>
            <returns>The same instance of the <see cref="T:Microsoft.AspNetCore.SignalR.Client.IHubConnectionBuilder"/> for chaining.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.SignalR.Client.HubConnectionBuilderHttpExtensions.WithUrl(Microsoft.AspNetCore.SignalR.Client.IHubConnectionBuilder,System.Uri)">
            <summary>
            Configures the <see cref="T:Microsoft.AspNetCore.SignalR.Client.HubConnection" /> to use HTTP-based transports to connect to the specified URL.
            </summary>
            <param name="hubConnectionBuilder">The <see cref="T:Microsoft.AspNetCore.SignalR.Client.IHubConnectionBuilder" /> to configure.</param>
            <param name="url">The URL the <see cref="T:Microsoft.AspNetCore.Http.Connections.Client.HttpConnection"/> will use.</param>
            <returns>The same instance of the <see cref="T:Microsoft.AspNetCore.SignalR.Client.IHubConnectionBuilder"/> for chaining.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.SignalR.Client.HubConnectionBuilderHttpExtensions.WithUrl(Microsoft.AspNetCore.SignalR.Client.IHubConnectionBuilder,System.Uri,System.Action{Microsoft.AspNetCore.Http.Connections.Client.HttpConnectionOptions})">
            <summary>
            Configures the <see cref="T:Microsoft.AspNetCore.SignalR.Client.HubConnection" /> to use HTTP-based transports to connect to the specified URL.
            </summary>
            <param name="hubConnectionBuilder">The <see cref="T:Microsoft.AspNetCore.SignalR.Client.IHubConnectionBuilder" /> to configure.</param>
            <param name="url">The URL the <see cref="T:Microsoft.AspNetCore.Http.Connections.Client.HttpConnection"/> will use.</param>
            <param name="configureHttpConnection">The delegate that configures the <see cref="T:Microsoft.AspNetCore.Http.Connections.Client.HttpConnection"/>.</param>
            <returns>The same instance of the <see cref="T:Microsoft.AspNetCore.SignalR.Client.IHubConnectionBuilder"/> for chaining.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.SignalR.Client.HubConnectionBuilderHttpExtensions.WithUrl(Microsoft.AspNetCore.SignalR.Client.IHubConnectionBuilder,System.Uri,Microsoft.AspNetCore.Http.Connections.HttpTransportType)">
            <summary>
            Configures the <see cref="T:Microsoft.AspNetCore.SignalR.Client.HubConnection" /> to use HTTP-based transports to connect to the specified URL and transports.
            </summary>
            <param name="hubConnectionBuilder">The <see cref="T:Microsoft.AspNetCore.SignalR.Client.IHubConnectionBuilder" /> to configure.</param>
            <param name="url">The URL the <see cref="T:Microsoft.AspNetCore.Http.Connections.Client.HttpConnection"/> will use.</param>
            <param name="transports">A bitmask combining one or more <see cref="T:Microsoft.AspNetCore.Http.Connections.HttpTransportType"/> values that specify what transports the client should use.</param>
            <returns>The same instance of the <see cref="T:Microsoft.AspNetCore.SignalR.Client.IHubConnectionBuilder"/> for chaining.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.SignalR.Client.HubConnectionBuilderHttpExtensions.WithUrl(Microsoft.AspNetCore.SignalR.Client.IHubConnectionBuilder,System.Uri,Microsoft.AspNetCore.Http.Connections.HttpTransportType,System.Action{Microsoft.AspNetCore.Http.Connections.Client.HttpConnectionOptions})">
            <summary>
            Configures the <see cref="T:Microsoft.AspNetCore.SignalR.Client.HubConnection" /> to use HTTP-based transports to connect to the specified URL and transports.
            </summary>
            <param name="hubConnectionBuilder">The <see cref="T:Microsoft.AspNetCore.SignalR.Client.IHubConnectionBuilder" /> to configure.</param>
            <param name="url">The URL the <see cref="T:Microsoft.AspNetCore.Http.Connections.Client.HttpConnection"/> will use.</param>
            <param name="transports">A bitmask combining one or more <see cref="T:Microsoft.AspNetCore.Http.Connections.HttpTransportType"/> values that specify what transports the client should use.</param>
            <param name="configureHttpConnection">The delegate that configures the <see cref="T:Microsoft.AspNetCore.Http.Connections.Client.HttpConnection"/>.</param>
            <returns>The same instance of the <see cref="T:Microsoft.AspNetCore.SignalR.Client.IHubConnectionBuilder"/> for chaining.</returns>
        </member>
        <member name="M:Microsoft.AspNetCore.Shared.ArgumentNullThrowHelper.ThrowIfNull(System.Object,System.String)">
            <summary>Throws an <see cref="T:System.ArgumentNullException"/> if <paramref name="argument"/> is null.</summary>
            <param name="argument">The reference type argument to validate as non-null.</param>
            <param name="paramName">The name of the parameter with which <paramref name="argument"/> corresponds.</param>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.StringSyntaxAttribute">
            <summary>Specifies the syntax used in a string.</summary>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.StringSyntaxAttribute.#ctor(System.String)">
            <summary>Initializes the <see cref="T:System.Diagnostics.CodeAnalysis.StringSyntaxAttribute"/> with the identifier of the syntax used.</summary>
            <param name="syntax">The syntax identifier.</param>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.StringSyntaxAttribute.#ctor(System.String,System.Object[])">
            <summary>Initializes the <see cref="T:System.Diagnostics.CodeAnalysis.StringSyntaxAttribute"/> with the identifier of the syntax used.</summary>
            <param name="syntax">The syntax identifier.</param>
            <param name="arguments">Optional arguments associated with the specific syntax employed.</param>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.StringSyntaxAttribute.Syntax">
            <summary>Gets the identifier of the syntax used.</summary>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.StringSyntaxAttribute.Arguments">
            <summary>Optional arguments associated with the specific syntax employed.</summary>
        </member>
        <member name="F:System.Diagnostics.CodeAnalysis.StringSyntaxAttribute.CompositeFormat">
            <summary>The syntax identifier for strings containing composite formats for string formatting.</summary>
        </member>
        <member name="F:System.Diagnostics.CodeAnalysis.StringSyntaxAttribute.DateOnlyFormat">
            <summary>The syntax identifier for strings containing date format specifiers.</summary>
        </member>
        <member name="F:System.Diagnostics.CodeAnalysis.StringSyntaxAttribute.DateTimeFormat">
            <summary>The syntax identifier for strings containing date and time format specifiers.</summary>
        </member>
        <member name="F:System.Diagnostics.CodeAnalysis.StringSyntaxAttribute.EnumFormat">
            <summary>The syntax identifier for strings containing <see cref="T:System.Enum"/> format specifiers.</summary>
        </member>
        <member name="F:System.Diagnostics.CodeAnalysis.StringSyntaxAttribute.GuidFormat">
            <summary>The syntax identifier for strings containing <see cref="T:System.Guid"/> format specifiers.</summary>
        </member>
        <member name="F:System.Diagnostics.CodeAnalysis.StringSyntaxAttribute.Json">
            <summary>The syntax identifier for strings containing JavaScript Object Notation (JSON).</summary>
        </member>
        <member name="F:System.Diagnostics.CodeAnalysis.StringSyntaxAttribute.NumericFormat">
            <summary>The syntax identifier for strings containing numeric format specifiers.</summary>
        </member>
        <member name="F:System.Diagnostics.CodeAnalysis.StringSyntaxAttribute.Regex">
            <summary>The syntax identifier for strings containing regular expressions.</summary>
        </member>
        <member name="F:System.Diagnostics.CodeAnalysis.StringSyntaxAttribute.TimeOnlyFormat">
            <summary>The syntax identifier for strings containing time format specifiers.</summary>
        </member>
        <member name="F:System.Diagnostics.CodeAnalysis.StringSyntaxAttribute.TimeSpanFormat">
            <summary>The syntax identifier for strings containing <see cref="T:System.TimeSpan"/> format specifiers.</summary>
        </member>
        <member name="F:System.Diagnostics.CodeAnalysis.StringSyntaxAttribute.Uri">
            <summary>The syntax identifier for strings containing URIs.</summary>
        </member>
        <member name="F:System.Diagnostics.CodeAnalysis.StringSyntaxAttribute.Xml">
            <summary>The syntax identifier for strings containing XML.</summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.AllowNullAttribute">
            <summary>Specifies that null is allowed as an input even if the corresponding type disallows it.</summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.DisallowNullAttribute">
            <summary>Specifies that null is disallowed as an input even if the corresponding type allows it.</summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.MaybeNullAttribute">
            <summary>Specifies that an output may be null even if the corresponding type disallows it.</summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.NotNullAttribute">
            <summary>Specifies that an output will not be null even if the corresponding type allows it. Specifies that an input argument was not null when the call returns.</summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.MaybeNullWhenAttribute">
            <summary>Specifies that when a method returns <see cref="P:System.Diagnostics.CodeAnalysis.MaybeNullWhenAttribute.ReturnValue"/>, the parameter may be null even if the corresponding type disallows it.</summary>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.MaybeNullWhenAttribute.#ctor(System.Boolean)">
            <summary>Initializes the attribute with the specified return value condition.</summary>
            <param name="returnValue">
            The return value condition. If the method returns this value, the associated parameter may be null.
            </param>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.MaybeNullWhenAttribute.ReturnValue">
            <summary>Gets the return value condition.</summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.NotNullWhenAttribute">
            <summary>Specifies that when a method returns <see cref="P:System.Diagnostics.CodeAnalysis.NotNullWhenAttribute.ReturnValue"/>, the parameter will not be null even if the corresponding type allows it.</summary>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.NotNullWhenAttribute.#ctor(System.Boolean)">
            <summary>Initializes the attribute with the specified return value condition.</summary>
            <param name="returnValue">
            The return value condition. If the method returns this value, the associated parameter will not be null.
            </param>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.NotNullWhenAttribute.ReturnValue">
            <summary>Gets the return value condition.</summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.NotNullIfNotNullAttribute">
            <summary>Specifies that the output will be non-null if the named parameter is non-null.</summary>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.NotNullIfNotNullAttribute.#ctor(System.String)">
            <summary>Initializes the attribute with the associated parameter name.</summary>
            <param name="parameterName">
            The associated parameter name.  The output will be non-null if the argument to the parameter specified is non-null.
            </param>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.NotNullIfNotNullAttribute.ParameterName">
            <summary>Gets the associated parameter name.</summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.DoesNotReturnAttribute">
            <summary>Applied to a method that will never return under any circumstance.</summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.DoesNotReturnIfAttribute">
            <summary>Specifies that the method will not return if the associated Boolean parameter is passed the specified value.</summary>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.DoesNotReturnIfAttribute.#ctor(System.Boolean)">
            <summary>Initializes the attribute with the specified parameter value.</summary>
            <param name="parameterValue">
            The condition parameter value. Code after the method will be considered unreachable by diagnostics if the argument to
            the associated parameter matches this value.
            </param>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.DoesNotReturnIfAttribute.ParameterValue">
            <summary>Gets the condition parameter value.</summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.MemberNotNullAttribute">
            <summary>Specifies that the method or property will ensure that the listed field and property members have not-null values.</summary>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.MemberNotNullAttribute.#ctor(System.String)">
            <summary>Initializes the attribute with a field or property member.</summary>
            <param name="member">
            The field or property member that is promised to be not-null.
            </param>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.MemberNotNullAttribute.#ctor(System.String[])">
            <summary>Initializes the attribute with the list of field and property members.</summary>
            <param name="members">
            The list of field and property members that are promised to be not-null.
            </param>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.MemberNotNullAttribute.Members">
            <summary>Gets field or property member names.</summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.MemberNotNullWhenAttribute">
            <summary>Specifies that the method or property will ensure that the listed field and property members have not-null values when returning with the specified return value condition.</summary>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.MemberNotNullWhenAttribute.#ctor(System.Boolean,System.String)">
            <summary>Initializes the attribute with the specified return value condition and a field or property member.</summary>
            <param name="returnValue">
            The return value condition. If the method returns this value, the associated parameter will not be null.
            </param>
            <param name="member">
            The field or property member that is promised to be not-null.
            </param>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.MemberNotNullWhenAttribute.#ctor(System.Boolean,System.String[])">
            <summary>Initializes the attribute with the specified return value condition and list of field and property members.</summary>
            <param name="returnValue">
            The return value condition. If the method returns this value, the associated parameter will not be null.
            </param>
            <param name="members">
            The list of field and property members that are promised to be not-null.
            </param>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.MemberNotNullWhenAttribute.ReturnValue">
            <summary>Gets the return value condition.</summary>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.MemberNotNullWhenAttribute.Members">
            <summary>Gets field or property member names.</summary>
        </member>
    </members>
</doc>
