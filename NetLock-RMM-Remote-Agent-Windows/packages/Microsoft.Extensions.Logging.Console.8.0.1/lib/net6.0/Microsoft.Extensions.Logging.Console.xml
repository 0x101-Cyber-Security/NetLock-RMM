<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.Extensions.Logging.Console</name>
    </assembly>
    <members>
        <member name="T:Microsoft.Extensions.Logging.Console.AnsiLogConsole">
            <summary>
            For consoles which understand the ANSI escape code sequences to represent color
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.Logging.Console.AnsiParser.Parse(System.String)">
            <summary>
            Parses a subset of display attributes
            Set Display Attributes
            Set Attribute Mode [{attr1};...;{attrn}m
            Sets multiple display attribute settings. The following lists standard attributes that are getting parsed:
            1 Bright
            Foreground Colours
            30 Black
            31 Red
            32 Green
            33 Yellow
            34 Blue
            35 Magenta
            36 Cyan
            37 White
            Background Colours
            40 Black
            41 Red
            42 Green
            43 Yellow
            44 Blue
            45 Magenta
            46 Cyan
            47 White
            </summary>
        </member>
        <member name="T:Microsoft.Extensions.Logging.Console.ConfigurationConsoleLoggerSettings">
            <summary>
            Settings for a <see cref="T:Microsoft.Extensions.Logging.Console.ConsoleLogger"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.Logging.Console.ConfigurationConsoleLoggerSettings.#ctor(Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Creates a new instance of <see cref="T:Microsoft.Extensions.Logging.Console.ConfigurationConsoleLoggerSettings"/>.
            </summary>
            <param name="configuration">provides access to configuration values.</param>
        </member>
        <member name="P:Microsoft.Extensions.Logging.Console.ConfigurationConsoleLoggerSettings.ChangeToken">
            <summary>
            Gets the <see cref="T:Microsoft.Extensions.Primitives.IChangeToken"/> propagates notifications that a change has occurred.
            </summary>
        </member>
        <member name="P:Microsoft.Extensions.Logging.Console.ConfigurationConsoleLoggerSettings.IncludeScopes">
            <summary>
            Gets a value indicating whether scopes should be included in the message.
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.Logging.Console.ConfigurationConsoleLoggerSettings.Reload">
            <summary>
            Reload the settings from the configuration.
            </summary>
            <returns>The reloaded settings.</returns>
        </member>
        <member name="M:Microsoft.Extensions.Logging.Console.ConfigurationConsoleLoggerSettings.TryGetSwitch(System.String,Microsoft.Extensions.Logging.LogLevel@)">
            <summary>
            Gets the log level for the specified switch.
            </summary>
            <param name="name">The name of the switch to look up</param>
            <param name="level">An out parameter that will be set to the value of the switch if it is found. If the switch is not found, the method returns false and sets the value of level to LogLevel.None</param>
            <returns>True if the switch was found, otherwise false.</returns>
            <exception cref="T:System.InvalidOperationException"></exception>
        </member>
        <member name="T:Microsoft.Extensions.Logging.Console.ConsoleFormatter">
            <summary>
            Allows custom log messages formatting
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.Logging.Console.ConsoleFormatter.#ctor(System.String)">
            <summary>
            Initializes a new instance of <see cref="T:Microsoft.Extensions.Logging.Console.ConsoleFormatter"/>.
            </summary>
            <param name="name"></param>
        </member>
        <member name="P:Microsoft.Extensions.Logging.Console.ConsoleFormatter.Name">
            <summary>
            Gets the name associated with the console log formatter.
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.Logging.Console.ConsoleFormatter.Write``1(Microsoft.Extensions.Logging.Abstractions.LogEntry{``0}@,Microsoft.Extensions.Logging.IExternalScopeProvider,System.IO.TextWriter)">
            <summary>
            Writes the log message to the specified TextWriter.
            </summary>
            <remarks>
            if the formatter wants to write colors to the console, it can do so by embedding ANSI color codes into the string
            </remarks>
            <param name="logEntry">The log entry.</param>
            <param name="scopeProvider">The provider of scope data.</param>
            <param name="textWriter">The string writer embedding ansi code for colors.</param>
            <typeparam name="TState">The type of the object to be written.</typeparam>
        </member>
        <member name="T:Microsoft.Extensions.Logging.Console.ConsoleFormatterNames">
            <summary>
            Reserved formatter names for the built-in console formatters.
            </summary>
        </member>
        <member name="F:Microsoft.Extensions.Logging.Console.ConsoleFormatterNames.Simple">
            <summary>
            Reserved name for simple console formatter
            </summary>
        </member>
        <member name="F:Microsoft.Extensions.Logging.Console.ConsoleFormatterNames.Json">
            <summary>
            Reserved name for json console formatter
            </summary>
        </member>
        <member name="F:Microsoft.Extensions.Logging.Console.ConsoleFormatterNames.Systemd">
            <summary>
            Reserved name for systemd console formatter
            </summary>
        </member>
        <member name="T:Microsoft.Extensions.Logging.Console.ConsoleFormatterOptions">
            <summary>
            Options for the built-in console log formatter.
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.Logging.Console.ConsoleFormatterOptions.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Extensions.Logging.Console.ConsoleFormatterOptions"/> class.
            </summary>
        </member>
        <member name="P:Microsoft.Extensions.Logging.Console.ConsoleFormatterOptions.IncludeScopes">
            <summary>
            Includes scopes when <see langword="true" />.
            </summary>
        </member>
        <member name="P:Microsoft.Extensions.Logging.Console.ConsoleFormatterOptions.TimestampFormat">
            <summary>
            Gets or sets format string used to format timestamp in logging messages. Defaults to <c>null</c>.
            </summary>
        </member>
        <member name="P:Microsoft.Extensions.Logging.Console.ConsoleFormatterOptions.UseUtcTimestamp">
            <summary>
            Gets or sets indication whether or not UTC timezone should be used to format timestamps in logging messages. Defaults to <c>false</c>.
            </summary>
        </member>
        <member name="T:Microsoft.Extensions.Logging.Console.ConsoleLogger">
            <summary>
            A logger that writes messages in the console.
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.Logging.Console.ConsoleLogger.Log``1(Microsoft.Extensions.Logging.LogLevel,Microsoft.Extensions.Logging.EventId,``0,System.Exception,System.Func{``0,System.Exception,System.String})">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Extensions.Logging.Console.ConsoleLogger.IsEnabled(Microsoft.Extensions.Logging.LogLevel)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Extensions.Logging.Console.ConsoleLogger.BeginScope``1(``0)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.Extensions.Logging.Console.ConsoleLoggerFormat">
            <summary>
            Format of <see cref="T:Microsoft.Extensions.Logging.Console.ConsoleLogger" /> messages.
            </summary>
        </member>
        <member name="F:Microsoft.Extensions.Logging.Console.ConsoleLoggerFormat.Default">
            <summary>
            Produces messages in the default console format.
            </summary>
        </member>
        <member name="F:Microsoft.Extensions.Logging.Console.ConsoleLoggerFormat.Systemd">
            <summary>
            Produces messages in a format suitable for console output to the systemd journal.
            </summary>
        </member>
        <member name="T:Microsoft.Extensions.Logging.Console.ConsoleLoggerOptions">
            <summary>
            Options for a <see cref="T:Microsoft.Extensions.Logging.Console.ConsoleLogger"/>.
            </summary>
        </member>
        <member name="P:Microsoft.Extensions.Logging.Console.ConsoleLoggerOptions.DisableColors">
            <summary>
            Disables colors when <see langword="true" />.
            </summary>
        </member>
        <member name="P:Microsoft.Extensions.Logging.Console.ConsoleLoggerOptions.Format">
            <summary>
            Gets or sets log message format. Defaults to <see cref="F:Microsoft.Extensions.Logging.Console.ConsoleLoggerFormat.Default" />.
            </summary>
        </member>
        <member name="P:Microsoft.Extensions.Logging.Console.ConsoleLoggerOptions.FormatterName">
            <summary>
            Name of the log message formatter to use. Defaults to <c>simple</c>.
            </summary>
        </member>
        <member name="P:Microsoft.Extensions.Logging.Console.ConsoleLoggerOptions.IncludeScopes">
            <summary>
            Includes scopes when <see langword="true" />.
            </summary>
        </member>
        <member name="P:Microsoft.Extensions.Logging.Console.ConsoleLoggerOptions.LogToStandardErrorThreshold">
            <summary>
            Gets or sets value indicating the minimum level of messages that would get written to <c>Console.Error</c>.
            </summary>
        </member>
        <member name="P:Microsoft.Extensions.Logging.Console.ConsoleLoggerOptions.TimestampFormat">
            <summary>
            Gets or sets format string used to format timestamp in logging messages. Defaults to <c>null</c>.
            </summary>
        </member>
        <member name="P:Microsoft.Extensions.Logging.Console.ConsoleLoggerOptions.UseUtcTimestamp">
            <summary>
            Gets or sets indication whether or not UTC timezone should be used to format timestamps in logging messages. Defaults to <c>false</c>.
            </summary>
        </member>
        <member name="P:Microsoft.Extensions.Logging.Console.ConsoleLoggerOptions.QueueFullMode">
            <summary>
            Gets or sets the desired console logger behavior when the queue becomes full. Defaults to <c>Wait</c>.
            </summary>
        </member>
        <member name="P:Microsoft.Extensions.Logging.Console.ConsoleLoggerOptions.MaxQueueLength">
            <summary>
            Gets or sets the maximum number of enqueued messages. Defaults to 2500.
            </summary>
        </member>
        <member name="T:Microsoft.Extensions.Logging.Console.ConsoleLoggerProvider">
            <summary>
            A provider of <see cref="T:Microsoft.Extensions.Logging.Console.ConsoleLogger"/> instances.
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.Logging.Console.ConsoleLoggerProvider.#ctor(Microsoft.Extensions.Options.IOptionsMonitor{Microsoft.Extensions.Logging.Console.ConsoleLoggerOptions})">
            <summary>
            Creates an instance of <see cref="T:Microsoft.Extensions.Logging.Console.ConsoleLoggerProvider"/>.
            </summary>
            <param name="options">The options to create <see cref="T:Microsoft.Extensions.Logging.Console.ConsoleLogger"/> instances with.</param>
        </member>
        <member name="M:Microsoft.Extensions.Logging.Console.ConsoleLoggerProvider.#ctor(Microsoft.Extensions.Options.IOptionsMonitor{Microsoft.Extensions.Logging.Console.ConsoleLoggerOptions},System.Collections.Generic.IEnumerable{Microsoft.Extensions.Logging.Console.ConsoleFormatter})">
            <summary>
            Creates an instance of <see cref="T:Microsoft.Extensions.Logging.Console.ConsoleLoggerProvider"/>.
            </summary>
            <param name="options">The options to create <see cref="T:Microsoft.Extensions.Logging.Console.ConsoleLogger"/> instances with.</param>
            <param name="formatters">Log formatters added for <see cref="T:Microsoft.Extensions.Logging.Console.ConsoleLogger"/> insteaces.</param>
        </member>
        <member name="M:Microsoft.Extensions.Logging.Console.ConsoleLoggerProvider.CreateLogger(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Extensions.Logging.Console.ConsoleLoggerProvider.Dispose">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Extensions.Logging.Console.ConsoleLoggerProvider.SetScopeProvider(Microsoft.Extensions.Logging.IExternalScopeProvider)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.Extensions.Logging.Console.ConsoleLoggerQueueFullMode">
            <summary>
            Determines the console logger behavior when the queue becomes full.
            </summary>
        </member>
        <member name="F:Microsoft.Extensions.Logging.Console.ConsoleLoggerQueueFullMode.Wait">
            <summary>
            Blocks the logging threads once the queue limit is reached.
            </summary>
        </member>
        <member name="F:Microsoft.Extensions.Logging.Console.ConsoleLoggerQueueFullMode.DropWrite">
            <summary>
            Drops new log messages when the queue is full.
            </summary>
        </member>
        <member name="T:Microsoft.Extensions.Logging.Console.ConsoleLoggerSettings">
            <summary>
            This type is retained only for compatibility. The recommended alternative is ConsoleLoggerOptions.
            </summary>
        </member>
        <member name="P:Microsoft.Extensions.Logging.Console.ConsoleLoggerSettings.ChangeToken">
            <inheritdoc/>
        </member>
        <member name="P:Microsoft.Extensions.Logging.Console.ConsoleLoggerSettings.IncludeScopes">
            <inheritdoc/>
        </member>
        <member name="P:Microsoft.Extensions.Logging.Console.ConsoleLoggerSettings.DisableColors">
            <summary>
            This property is retained only for compatibility.
            </summary>
        </member>
        <member name="P:Microsoft.Extensions.Logging.Console.ConsoleLoggerSettings.Switches">
            <summary>
            This property is retained only for compatibility.
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.Logging.Console.ConsoleLoggerSettings.Reload">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Extensions.Logging.Console.ConsoleLoggerSettings.TryGetSwitch(System.String,Microsoft.Extensions.Logging.LogLevel@)">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.Extensions.Logging.Console.IConsoleLoggerSettings">
            <summary>
            This type is retained only for compatibility. The recommended alternative is ConsoleLoggerOptions.
            </summary>
        </member>
        <member name="P:Microsoft.Extensions.Logging.Console.IConsoleLoggerSettings.IncludeScopes">
            <summary>
            This property is retained only for compatibility.
            </summary>
        </member>
        <member name="P:Microsoft.Extensions.Logging.Console.IConsoleLoggerSettings.ChangeToken">
            <summary>
            This property is retained only for compatibility.
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.Logging.Console.IConsoleLoggerSettings.TryGetSwitch(System.String,Microsoft.Extensions.Logging.LogLevel@)">
            <summary>
            This property is retained only for compatibility.
            </summary>
            <param name="name">This property is retained only for compatibility.</param>
            <param name="level">This property is retained only for compatibility.</param>
            <returns>This property is retained only for compatibility.</returns>
        </member>
        <member name="M:Microsoft.Extensions.Logging.Console.IConsoleLoggerSettings.Reload">
            <summary>
            This method is retained only for compatibility.
            </summary>
            <returns>This method is retained only for compatibility.</returns>
        </member>
        <member name="T:Microsoft.Extensions.Logging.Console.JsonConsoleFormatterOptions">
            <summary>
            Options for the built-in json console log formatter.
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.Logging.Console.JsonConsoleFormatterOptions.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Extensions.Logging.Console.JsonConsoleFormatterOptions"/> class.
            </summary>
        </member>
        <member name="P:Microsoft.Extensions.Logging.Console.JsonConsoleFormatterOptions.JsonWriterOptions">
            <summary>
            Gets or sets JsonWriterOptions.
            </summary>
        </member>
        <member name="T:Microsoft.Extensions.Logging.Console.LoggerColorBehavior">
            <summary>
            Determines when to use color when logging messages.
            </summary>
        </member>
        <member name="F:Microsoft.Extensions.Logging.Console.LoggerColorBehavior.Default">
            <summary>
            Use the default color behavior, enabling color except when the console output is redirected.
            </summary>
            <remarks>
            Enables color except when the console output is redirected.
            </remarks>
        </member>
        <member name="F:Microsoft.Extensions.Logging.Console.LoggerColorBehavior.Enabled">
            <summary>
            Enable color for logging
            </summary>
        </member>
        <member name="F:Microsoft.Extensions.Logging.Console.LoggerColorBehavior.Disabled">
            <summary>
            Disable color for logging
            </summary>
        </member>
        <member name="T:Microsoft.Extensions.Logging.Console.SimpleConsoleFormatterOptions">
            <summary>
            Options for the built-in default console log formatter.
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.Logging.Console.SimpleConsoleFormatterOptions.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Extensions.Logging.Console.SimpleConsoleFormatterOptions"/> class.
            </summary>
        </member>
        <member name="P:Microsoft.Extensions.Logging.Console.SimpleConsoleFormatterOptions.ColorBehavior">
            <summary>
            Determines when to use color when logging messages.
            </summary>
        </member>
        <member name="P:Microsoft.Extensions.Logging.Console.SimpleConsoleFormatterOptions.SingleLine">
            <summary>
            When <see langword="true" />, the entire message gets logged in a single line.
            </summary>
        </member>
        <member name="T:Microsoft.Extensions.Logging.ConsoleFormatterConfigureOptions">
            <summary>
            Configures a ConsoleFormatterOptions object from an IConfiguration.
            </summary>
            <remarks>
            Doesn't use ConfigurationBinder in order to allow ConfigurationBinder, and all its dependencies,
            to be trimmed. This improves app size and startup.
            </remarks>
        </member>
        <member name="T:Microsoft.Extensions.Logging.ConsoleLoggerConfigureOptions">
            <summary>
            Configures a ConsoleLoggerOptions object from an IConfiguration.
            </summary>
            <remarks>
            Doesn't use ConfigurationBinder in order to allow ConfigurationBinder, and all its dependencies,
            to be trimmed. This improves app size and startup.
            </remarks>
        </member>
        <member name="T:Microsoft.Extensions.Logging.ConsoleLoggerExtensions">
            <summary>
            Provides extension methods for the <see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder"/> and <see cref="T:Microsoft.Extensions.Logging.Configuration.ILoggerProviderConfiguration`1"/> classes.
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole(Microsoft.Extensions.Logging.ILoggingBuilder)">
            <summary>
            Adds a console logger named 'Console' to the factory.
            </summary>
            <param name="builder">The <see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder"/> to use.</param>
        </member>
        <member name="M:Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole(Microsoft.Extensions.Logging.ILoggingBuilder,System.Action{Microsoft.Extensions.Logging.Console.ConsoleLoggerOptions})">
            <summary>
            Adds a console logger named 'Console' to the factory.
            </summary>
            <param name="builder">The <see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder"/> to use.</param>
            <param name="configure">A delegate to configure the <see cref="T:Microsoft.Extensions.Logging.Console.ConsoleLogger"/>.</param>
        </member>
        <member name="M:Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddSimpleConsole(Microsoft.Extensions.Logging.ILoggingBuilder)">
            <summary>
            Add the default console log formatter named 'simple' to the factory with default properties.
            </summary>
            <param name="builder">The <see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder"/> to use.</param>
        </member>
        <member name="M:Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddSimpleConsole(Microsoft.Extensions.Logging.ILoggingBuilder,System.Action{Microsoft.Extensions.Logging.Console.SimpleConsoleFormatterOptions})">
            <summary>
            Add and configure a console log formatter named 'simple' to the factory.
            </summary>
            <param name="builder">The <see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder"/> to use.</param>
            <param name="configure">A delegate to configure the <see cref="T:Microsoft.Extensions.Logging.Console.ConsoleLogger"/> options for the built-in default log formatter.</param>
        </member>
        <member name="M:Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddJsonConsole(Microsoft.Extensions.Logging.ILoggingBuilder)">
            <summary>
            Add a console log formatter named 'json' to the factory with default properties.
            </summary>
            <param name="builder">The <see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder"/> to use.</param>
        </member>
        <member name="M:Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddJsonConsole(Microsoft.Extensions.Logging.ILoggingBuilder,System.Action{Microsoft.Extensions.Logging.Console.JsonConsoleFormatterOptions})">
            <summary>
            Add and configure a console log formatter named 'json' to the factory.
            </summary>
            <param name="builder">The <see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder"/> to use.</param>
            <param name="configure">A delegate to configure the <see cref="T:Microsoft.Extensions.Logging.Console.ConsoleLogger"/> options for the built-in json log formatter.</param>
        </member>
        <member name="M:Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddSystemdConsole(Microsoft.Extensions.Logging.ILoggingBuilder,System.Action{Microsoft.Extensions.Logging.Console.ConsoleFormatterOptions})">
            <summary>
            Add and configure a console log formatter named 'systemd' to the factory.
            </summary>
            <param name="builder">The <see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder"/> to use.</param>
            <param name="configure">A delegate to configure the <see cref="T:Microsoft.Extensions.Logging.Console.ConsoleLogger"/> options for the built-in systemd log formatter.</param>
        </member>
        <member name="M:Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddSystemdConsole(Microsoft.Extensions.Logging.ILoggingBuilder)">
            <summary>
            Add a console log formatter named 'systemd' to the factory with default properties.
            </summary>
            <param name="builder">The <see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder"/> to use.</param>
        </member>
        <member name="M:Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsoleFormatter``2(Microsoft.Extensions.Logging.ILoggingBuilder)">
            <summary>
            Adds a custom console logger formatter 'TFormatter' to be configured with options 'TOptions'.
            </summary>
            <param name="builder">The <see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder"/> to use.</param>
        </member>
        <member name="M:Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsoleFormatter``2(Microsoft.Extensions.Logging.ILoggingBuilder,System.Action{``1})">
            <summary>
            Adds a custom console logger formatter 'TFormatter' to be configured with options 'TOptions'.
            </summary>
            <param name="builder">The <see cref="T:Microsoft.Extensions.Logging.ILoggingBuilder"/> to use.</param>
            <param name="configure">A delegate to configure options 'TOptions' for custom formatter 'TFormatter'.</param>
        </member>
        <member name="M:Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole(Microsoft.Extensions.Logging.ILoggerFactory,Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            This method is retained only for compatibility.
            </summary>
            <param name="factory">This method is retained only for compatibility.</param>
            <param name="configuration">This method is retained only for compatibility.</param>
            <returns>This method is retained only for compatibility.</returns>
        </member>
        <member name="M:Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole(Microsoft.Extensions.Logging.ILoggerFactory,Microsoft.Extensions.Logging.Console.IConsoleLoggerSettings)">
            <summary>
            This method is retained only for compatibility.
            </summary>
            <param name="factory">This method is retained only for compatibility.</param>
            <param name="settings">This method is retained only for compatibility.</param>
            <returns>This method is retained only for compatibility.</returns>
        </member>
        <member name="M:Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole(Microsoft.Extensions.Logging.ILoggerFactory,Microsoft.Extensions.Logging.LogLevel,System.Boolean)">
            <summary>
            This method is retained only for compatibility.
            </summary>
            <param name="factory">This method is retained only for compatibility.</param>
            <param name="minLevel">This method is retained only for compatibility.</param>
            <param name="includeScopes">This method is retained only for compatibility.</param>
            <returns>This method is retained only for compatibility.</returns>
        </member>
        <member name="M:Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole(Microsoft.Extensions.Logging.ILoggerFactory,Microsoft.Extensions.Logging.LogLevel)">
            <summary>
            This method is retained only for compatibility.
            </summary>
            <param name="factory">This method is retained only for compatibility.</param>
            <param name="minLevel">This method is retained only for compatibility.</param>
            <returns>This method is retained only for compatibility.</returns>
        </member>
        <member name="M:Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole(Microsoft.Extensions.Logging.ILoggerFactory,System.Boolean)">
            <summary>
            This method is retained only for compatibility.
            </summary>
            <param name="factory">This method is retained only for compatibility.</param>
            <param name="includeScopes">This method is retained only for compatibility.</param>
            <returns>This method is retained only for compatibility.</returns>
        </member>
        <member name="M:Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole(Microsoft.Extensions.Logging.ILoggerFactory,System.Func{System.String,Microsoft.Extensions.Logging.LogLevel,System.Boolean},System.Boolean)">
            <summary>
            This method is retained only for compatibility.
            </summary>
            <param name="factory">This method is retained only for compatibility.</param>
            <param name="filter">This method is retained only for compatibility.</param>
            <param name="includeScopes">This method is retained only for compatibility.</param>
            <returns>This method is retained only for compatibility.</returns>
        </member>
        <member name="M:Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole(Microsoft.Extensions.Logging.ILoggerFactory,System.Func{System.String,Microsoft.Extensions.Logging.LogLevel,System.Boolean})">
            <summary>
            This method is retained only for compatibility.
            </summary>
            <param name="factory">This method is retained only for compatibility.</param>
            <param name="filter">This method is retained only for compatibility.</param>
            <returns>This method is retained only for compatibility.</returns>
        </member>
        <member name="M:Microsoft.Extensions.Logging.ConsoleLoggerExtensions.AddConsole(Microsoft.Extensions.Logging.ILoggerFactory)">
            <summary>
            This method is retained only for compatibility.
            </summary>
            <param name="factory">This method is retained only for compatibility.</param>
            <returns>This method is retained only for compatibility.</returns>
        </member>
        <member name="T:Microsoft.Extensions.Logging.NullExternalScopeProvider">
            <summary>
            Scope provider that does nothing.
            </summary>
        </member>
        <member name="P:Microsoft.Extensions.Logging.NullExternalScopeProvider.Instance">
            <summary>
            Returns a cached instance of <see cref="T:Microsoft.Extensions.Logging.NullExternalScopeProvider"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.Logging.NullExternalScopeProvider.Microsoft#Extensions#Logging#IExternalScopeProvider#ForEachScope``1(System.Action{System.Object,``0},``0)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Extensions.Logging.NullExternalScopeProvider.Microsoft#Extensions#Logging#IExternalScopeProvider#Push(System.Object)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.Extensions.Logging.NullScope">
            <summary>
            An empty scope without any logic
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.Logging.NullScope.Dispose">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Extensions.Configuration.Binder.SourceGeneration.BindingExtensions.Bind_ConsoleFormatterOptions(Microsoft.Extensions.Configuration.IConfiguration,System.Object)">
            <summary>Attempts to bind the given object instance to configuration values by matching property names against configuration keys recursively.</summary>
        </member>
        <member name="M:Microsoft.Extensions.Configuration.Binder.SourceGeneration.BindingExtensions.Bind_ConsoleLoggerOptions(Microsoft.Extensions.Configuration.IConfiguration,System.Object)">
            <summary>Attempts to bind the given object instance to configuration values by matching property names against configuration keys recursively.</summary>
        </member>
        <member name="M:Microsoft.Extensions.Configuration.Binder.SourceGeneration.BindingExtensions.Bind_JsonConsoleFormatterOptions(Microsoft.Extensions.Configuration.IConfiguration,System.Object)">
            <summary>Attempts to bind the given object instance to configuration values by matching property names against configuration keys recursively.</summary>
        </member>
        <member name="M:Microsoft.Extensions.Configuration.Binder.SourceGeneration.BindingExtensions.Bind_SimpleConsoleFormatterOptions(Microsoft.Extensions.Configuration.IConfiguration,System.Object)">
            <summary>Attempts to bind the given object instance to configuration values by matching property names against configuration keys recursively.</summary>
        </member>
        <member name="M:Microsoft.Extensions.Configuration.Binder.SourceGeneration.BindingExtensions.ValidateConfigurationKeys(System.Type,System.Lazy{System.Collections.Generic.HashSet{System.String}},Microsoft.Extensions.Configuration.IConfiguration,Microsoft.Extensions.Configuration.BinderOptions)">
            <summary>If required by the binder options, validates that there are no unknown keys in the input configuration object.</summary>
        </member>
        <member name="M:System.ThrowHelper.ThrowIfNull(System.Object,System.String)">
            <summary>Throws an <see cref="T:System.ArgumentNullException"/> if <paramref name="argument"/> is null.</summary>
            <param name="argument">The reference type argument to validate as non-null.</param>
            <param name="paramName">The name of the parameter with which <paramref name="argument"/> corresponds.</param>
        </member>
        <member name="M:System.ThrowHelper.IfNullOrWhitespace(System.String,System.String)">
            <summary>
            Throws either an <see cref="T:System.ArgumentNullException"/> or an <see cref="T:System.ArgumentException"/>
            if the specified string is <see langword="null"/> or whitespace respectively.
            </summary>
            <param name="argument">String to be checked for <see langword="null"/> or whitespace.</param>
            <param name="paramName">The name of the parameter being checked.</param>
            <returns>The original value of <paramref name="argument"/>.</returns>
        </member>
        <member name="F:System.ConsoleUtils.s_emitAnsiColorCodes">
            <summary>Whether to output ansi color strings.</summary>
        </member>
        <member name="P:System.ConsoleUtils.EmitAnsiColorCodes">
            <summary>Get whether to emit ANSI color codes.</summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.RequiresDynamicCodeAttribute">
            <summary>
            Indicates that the specified method requires the ability to generate new code at runtime,
            for example through <see cref="N:System.Reflection"/>.
            </summary>
            <remarks>
            This allows tools to understand which methods are unsafe to call when compiling ahead of time.
            </remarks>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.RequiresDynamicCodeAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Diagnostics.CodeAnalysis.RequiresDynamicCodeAttribute"/> class
            with the specified message.
            </summary>
            <param name="message">
            A message that contains information about the usage of dynamic code.
            </param>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.RequiresDynamicCodeAttribute.Message">
            <summary>
            Gets a message that contains information about the usage of dynamic code.
            </summary>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.RequiresDynamicCodeAttribute.Url">
            <summary>
            Gets or sets an optional URL that contains more information about the method,
            why it requires dynamic code, and what options a consumer has to deal with it.
            </summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.StringSyntaxAttribute">
            <summary>Specifies the syntax used in a string.</summary>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.StringSyntaxAttribute.#ctor(System.String)">
            <summary>Initializes the <see cref="T:System.Diagnostics.CodeAnalysis.StringSyntaxAttribute"/> with the identifier of the syntax used.</summary>
            <param name="syntax">The syntax identifier.</param>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.StringSyntaxAttribute.#ctor(System.String,System.Object[])">
            <summary>Initializes the <see cref="T:System.Diagnostics.CodeAnalysis.StringSyntaxAttribute"/> with the identifier of the syntax used.</summary>
            <param name="syntax">The syntax identifier.</param>
            <param name="arguments">Optional arguments associated with the specific syntax employed.</param>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.StringSyntaxAttribute.Syntax">
            <summary>Gets the identifier of the syntax used.</summary>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.StringSyntaxAttribute.Arguments">
            <summary>Optional arguments associated with the specific syntax employed.</summary>
        </member>
        <member name="F:System.Diagnostics.CodeAnalysis.StringSyntaxAttribute.CompositeFormat">
            <summary>The syntax identifier for strings containing composite formats for string formatting.</summary>
        </member>
        <member name="F:System.Diagnostics.CodeAnalysis.StringSyntaxAttribute.DateOnlyFormat">
            <summary>The syntax identifier for strings containing date format specifiers.</summary>
        </member>
        <member name="F:System.Diagnostics.CodeAnalysis.StringSyntaxAttribute.DateTimeFormat">
            <summary>The syntax identifier for strings containing date and time format specifiers.</summary>
        </member>
        <member name="F:System.Diagnostics.CodeAnalysis.StringSyntaxAttribute.EnumFormat">
            <summary>The syntax identifier for strings containing <see cref="T:System.Enum"/> format specifiers.</summary>
        </member>
        <member name="F:System.Diagnostics.CodeAnalysis.StringSyntaxAttribute.GuidFormat">
            <summary>The syntax identifier for strings containing <see cref="T:System.Guid"/> format specifiers.</summary>
        </member>
        <member name="F:System.Diagnostics.CodeAnalysis.StringSyntaxAttribute.Json">
            <summary>The syntax identifier for strings containing JavaScript Object Notation (JSON).</summary>
        </member>
        <member name="F:System.Diagnostics.CodeAnalysis.StringSyntaxAttribute.NumericFormat">
            <summary>The syntax identifier for strings containing numeric format specifiers.</summary>
        </member>
        <member name="F:System.Diagnostics.CodeAnalysis.StringSyntaxAttribute.Regex">
            <summary>The syntax identifier for strings containing regular expressions.</summary>
        </member>
        <member name="F:System.Diagnostics.CodeAnalysis.StringSyntaxAttribute.TimeOnlyFormat">
            <summary>The syntax identifier for strings containing time format specifiers.</summary>
        </member>
        <member name="F:System.Diagnostics.CodeAnalysis.StringSyntaxAttribute.TimeSpanFormat">
            <summary>The syntax identifier for strings containing <see cref="T:System.TimeSpan"/> format specifiers.</summary>
        </member>
        <member name="F:System.Diagnostics.CodeAnalysis.StringSyntaxAttribute.Uri">
            <summary>The syntax identifier for strings containing URIs.</summary>
        </member>
        <member name="F:System.Diagnostics.CodeAnalysis.StringSyntaxAttribute.Xml">
            <summary>The syntax identifier for strings containing XML.</summary>
        </member>
        <member name="P:System.SR.BufferMaximumSizeExceeded">
            <summary>Cannot allocate a buffer of size {0}.</summary>
        </member>
        <member name="P:System.SR.QueueModeNotSupported">
            <summary>{0} is not a supported queue mode value.</summary>
        </member>
        <member name="P:System.SR.MaxQueueLengthBadValue">
            <summary>{0} must be larger than zero.</summary>
        </member>
        <member name="P:System.SR.WarningMessageOnDrop">
            <summary>{0} message(s) dropped because of queue size limit. Increase the queue size or decrease logging verbosity to avoid this. You may change `ConsoleLoggerQueueFullMode` to stop dropping messages.</summary>
        </member>
        <member name="P:System.SR.InvalidConfigurationData">
            <summary>Failed to convert configuration value at '{0}' to type '{1}'.</summary>
        </member>
        <member name="T:System.Runtime.InteropServices.LibraryImportAttribute">
            <summary>
            Attribute used to indicate a source generator should create a function for marshalling
            arguments instead of relying on the runtime to generate an equivalent marshalling function at run-time.
            </summary>
            <remarks>
            This attribute is meaningless if the source generator associated with it is not enabled.
            The current built-in source generator only supports C# and only supplies an implementation when
            applied to static, partial, non-generic methods.
            </remarks>
        </member>
        <member name="M:System.Runtime.InteropServices.LibraryImportAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Runtime.InteropServices.LibraryImportAttribute"/>.
            </summary>
            <param name="libraryName">Name of the library containing the import.</param>
        </member>
        <member name="P:System.Runtime.InteropServices.LibraryImportAttribute.LibraryName">
            <summary>
            Gets the name of the library containing the import.
            </summary>
        </member>
        <member name="P:System.Runtime.InteropServices.LibraryImportAttribute.EntryPoint">
            <summary>
            Gets or sets the name of the entry point to be called.
            </summary>
        </member>
        <member name="P:System.Runtime.InteropServices.LibraryImportAttribute.StringMarshalling">
            <summary>
            Gets or sets how to marshal string arguments to the method.
            </summary>
            <remarks>
            If this field is set to a value other than <see cref="F:System.Runtime.InteropServices.StringMarshalling.Custom" />,
            <see cref="P:System.Runtime.InteropServices.LibraryImportAttribute.StringMarshallingCustomType" /> must not be specified.
            </remarks>
        </member>
        <member name="P:System.Runtime.InteropServices.LibraryImportAttribute.StringMarshallingCustomType">
            <summary>
            Gets or sets the <see cref="T:System.Type"/> used to control how string arguments to the method are marshalled.
            </summary>
            <remarks>
            If this field is specified, <see cref="P:System.Runtime.InteropServices.LibraryImportAttribute.StringMarshalling" /> must not be specified
            or must be set to <see cref="F:System.Runtime.InteropServices.StringMarshalling.Custom" />.
            </remarks>
        </member>
        <member name="P:System.Runtime.InteropServices.LibraryImportAttribute.SetLastError">
            <summary>
            Gets or sets whether the callee sets an error (SetLastError on Windows or errno
            on other platforms) before returning from the attributed method.
            </summary>
        </member>
        <member name="T:System.Runtime.InteropServices.StringMarshalling">
            <summary>
            Specifies how strings should be marshalled for generated p/invokes
            </summary>
        </member>
        <member name="F:System.Runtime.InteropServices.StringMarshalling.Custom">
            <summary>
            Indicates the user is suppling a specific marshaller in <see cref="P:System.Runtime.InteropServices.LibraryImportAttribute.StringMarshallingCustomType"/>.
            </summary>
        </member>
        <member name="F:System.Runtime.InteropServices.StringMarshalling.Utf8">
            <summary>
            Use the platform-provided UTF-8 marshaller.
            </summary>
        </member>
        <member name="F:System.Runtime.InteropServices.StringMarshalling.Utf16">
            <summary>
            Use the platform-provided UTF-16 marshaller.
            </summary>
        </member>
    </members>
</doc>
