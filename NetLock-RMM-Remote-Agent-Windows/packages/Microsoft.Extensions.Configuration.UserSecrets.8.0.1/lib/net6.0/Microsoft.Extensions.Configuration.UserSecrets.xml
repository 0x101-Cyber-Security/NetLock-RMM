<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.Extensions.Configuration.UserSecrets</name>
    </assembly>
    <members>
        <member name="T:Microsoft.Extensions.Configuration.UserSecrets.PathHelper">
            <summary>
            Provides paths for user secrets configuration files.
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.Configuration.UserSecrets.PathHelper.GetSecretsPathFromSecretsId(System.String)">
            <summary>
            <para>
            Returns the path to the JSON file that stores user secrets.
            </para>
            <para>
            This uses the current user profile to locate the secrets file on disk in a location outside of source control.
            </para>
            </summary>
            <param name="userSecretsId">The user secret ID.</param>
            <returns>The full path to the secret file.</returns>
        </member>
        <member name="M:Microsoft.Extensions.Configuration.UserSecrets.PathHelper.InternalGetSecretsPathFromSecretsId(System.String,System.Boolean)">
            <summary>
            <para>
            Returns the path to the JSON file that stores user secrets or throws exception if not found.
            </para>
            <para>
            This uses the current user profile to locate the secrets file on disk in a location outside of source control.
            </para>
            </summary>
            <param name="userSecretsId">The user secret ID.</param>
            <param name="throwIfNoRoot">specifies if an exception should be thrown when no root for user secrets is found</param>
            <returns>The full path to the secret file.</returns>
        </member>
        <member name="T:Microsoft.Extensions.Configuration.UserSecrets.UserSecretsIdAttribute">
            <summary>
            <para>
            Represents the user secrets ID.
            </para>
            <para>
            In most cases, this attribute is automatically generated during compilation by MSBuild targets
            included in the UserSecrets NuGet package. These targets use the MSBuild property 'UserSecretsId'
            to set the value for <see cref="P:Microsoft.Extensions.Configuration.UserSecrets.UserSecretsIdAttribute.UserSecretsId"/>.
            </para>
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.Configuration.UserSecrets.UserSecretsIdAttribute.#ctor(System.String)">
            <summary>
            Initializes an instance of <see cref="T:Microsoft.Extensions.Configuration.UserSecrets.UserSecretsIdAttribute" />.
            </summary>
            <param name="userSecretId">The user secrets ID.</param>
        </member>
        <member name="P:Microsoft.Extensions.Configuration.UserSecrets.UserSecretsIdAttribute.UserSecretsId">
            <summary>
            The user secrets ID.
            </summary>
        </member>
        <member name="T:Microsoft.Extensions.Configuration.UserSecretsConfigurationExtensions">
            <summary>
            Configuration extensions for adding user secrets configuration source.
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.Configuration.UserSecretsConfigurationExtensions.AddUserSecrets``1(Microsoft.Extensions.Configuration.IConfigurationBuilder)">
            <summary>
            <para>
            Adds the user secrets configuration source. Searches the assembly that contains type <typeparamref name="T"/>
            for an instance of <see cref="T:Microsoft.Extensions.Configuration.UserSecrets.UserSecretsIdAttribute"/>, which specifies a user secrets ID.
            </para>
            <para>
            A user secrets ID is unique value used to store and identify a collection of secret configuration values.
            </para>
            </summary>
            <param name="configuration">The configuration builder.</param>
            <typeparam name="T">The type from the assembly to search for an instance of <see cref="T:Microsoft.Extensions.Configuration.UserSecrets.UserSecretsIdAttribute"/>.</typeparam>
            <exception cref="T:System.InvalidOperationException">Thrown when the assembly containing <typeparamref name="T"/> does not have <see cref="T:Microsoft.Extensions.Configuration.UserSecrets.UserSecretsIdAttribute"/>.</exception>
            <returns>The configuration builder.</returns>
        </member>
        <member name="M:Microsoft.Extensions.Configuration.UserSecretsConfigurationExtensions.AddUserSecrets``1(Microsoft.Extensions.Configuration.IConfigurationBuilder,System.Boolean)">
            <summary>
            <para>
            Adds the user secrets configuration source. Searches the assembly that contains type <typeparamref name="T"/>
            for an instance of <see cref="T:Microsoft.Extensions.Configuration.UserSecrets.UserSecretsIdAttribute"/>, which specifies a user secrets ID.
            </para>
            <para>
            A user secrets ID is unique value used to store and identify a collection of secret configuration values.
            </para>
            </summary>
            <param name="configuration">The configuration builder.</param>
            <param name="optional">Whether loading secrets is optional. When false, this method may throw.</param>
            <exception cref="T:System.InvalidOperationException">Thrown when <paramref name="optional"/> is false and the assembly containing <typeparamref name="T"/> does not have a valid <see cref="T:Microsoft.Extensions.Configuration.UserSecrets.UserSecretsIdAttribute"/>.</exception>
            <typeparam name="T">The type from the assembly to search for an instance of <see cref="T:Microsoft.Extensions.Configuration.UserSecrets.UserSecretsIdAttribute"/>.</typeparam>
            <returns>The configuration builder.</returns>
        </member>
        <member name="M:Microsoft.Extensions.Configuration.UserSecretsConfigurationExtensions.AddUserSecrets``1(Microsoft.Extensions.Configuration.IConfigurationBuilder,System.Boolean,System.Boolean)">
            <summary>
            <para>
            Adds the user secrets configuration source. Searches the assembly that contains type <typeparamref name="T"/>
            for an instance of <see cref="T:Microsoft.Extensions.Configuration.UserSecrets.UserSecretsIdAttribute"/>, which specifies a user secrets ID.
            </para>
            <para>
            A user secrets ID is unique value used to store and identify a collection of secret configuration values.
            </para>
            </summary>
            <param name="configuration">The configuration builder.</param>
            <param name="optional">Whether loading secrets is optional. When false, this method may throw.</param>
            <param name="reloadOnChange">Whether the configuration should be reloaded if the file changes.</param>
            <exception cref="T:System.InvalidOperationException">Thrown when <paramref name="optional"/> is false and the assembly containing <typeparamref name="T"/> does not have a valid <see cref="T:Microsoft.Extensions.Configuration.UserSecrets.UserSecretsIdAttribute"/>.</exception>
            <typeparam name="T">The type from the assembly to search for an instance of <see cref="T:Microsoft.Extensions.Configuration.UserSecrets.UserSecretsIdAttribute"/>.</typeparam>
            <returns>The configuration builder.</returns>
        </member>
        <member name="M:Microsoft.Extensions.Configuration.UserSecretsConfigurationExtensions.AddUserSecrets(Microsoft.Extensions.Configuration.IConfigurationBuilder,System.Reflection.Assembly)">
            <summary>
            <para>
            Adds the user secrets configuration source. This searches <paramref name="assembly"/> for an instance
            of <see cref="T:Microsoft.Extensions.Configuration.UserSecrets.UserSecretsIdAttribute"/>, which specifies a user secrets ID.
            </para>
            <para>
            A user secrets ID is unique value used to store and identify a collection of secret configuration values.
            </para>
            </summary>
            <param name="configuration">The configuration builder.</param>
            <param name="assembly">The assembly with the <see cref="T:Microsoft.Extensions.Configuration.UserSecrets.UserSecretsIdAttribute" />.</param>
            <exception cref="T:System.InvalidOperationException">Thrown when <paramref name="assembly"/> does not have a valid <see cref="T:Microsoft.Extensions.Configuration.UserSecrets.UserSecretsIdAttribute"/></exception>
            <returns>The configuration builder.</returns>
        </member>
        <member name="M:Microsoft.Extensions.Configuration.UserSecretsConfigurationExtensions.AddUserSecrets(Microsoft.Extensions.Configuration.IConfigurationBuilder,System.Reflection.Assembly,System.Boolean)">
            <summary>
            <para>
            Adds the user secrets configuration source. This searches <paramref name="assembly"/> for an instance
            of <see cref="T:Microsoft.Extensions.Configuration.UserSecrets.UserSecretsIdAttribute"/>, which specifies a user secrets ID.
            </para>
            <para>
            A user secrets ID is unique value used to store and identify a collection of secret configuration values.
            </para>
            </summary>
            <param name="configuration">The configuration builder.</param>
            <param name="assembly">The assembly with the <see cref="T:Microsoft.Extensions.Configuration.UserSecrets.UserSecretsIdAttribute" />.</param>
            <param name="optional">Whether loading secrets is optional. When false, this method may throw.</param>
            <exception cref="T:System.InvalidOperationException">Thrown when <paramref name="optional"/> is false and <paramref name="assembly"/> does not have a valid <see cref="T:Microsoft.Extensions.Configuration.UserSecrets.UserSecretsIdAttribute"/>.</exception>
            <returns>The configuration builder.</returns>
        </member>
        <member name="M:Microsoft.Extensions.Configuration.UserSecretsConfigurationExtensions.AddUserSecrets(Microsoft.Extensions.Configuration.IConfigurationBuilder,System.Reflection.Assembly,System.Boolean,System.Boolean)">
            <summary>
            <para>
            Adds the user secrets configuration source. This searches <paramref name="assembly"/> for an instance
            of <see cref="T:Microsoft.Extensions.Configuration.UserSecrets.UserSecretsIdAttribute"/>, which specifies a user secrets ID.
            </para>
            <para>
            A user secrets ID is unique value used to store and identify a collection of secret configuration values.
            </para>
            </summary>
            <param name="configuration">The configuration builder.</param>
            <param name="assembly">The assembly with the <see cref="T:Microsoft.Extensions.Configuration.UserSecrets.UserSecretsIdAttribute" />.</param>
            <param name="optional">Whether loading secrets is optional. When false, this method may throw.</param>
            <param name="reloadOnChange">Whether the configuration should be reloaded if the file changes.</param>
            <exception cref="T:System.InvalidOperationException">Thrown when <paramref name="optional"/> is false and <paramref name="assembly"/> does not have a valid <see cref="T:Microsoft.Extensions.Configuration.UserSecrets.UserSecretsIdAttribute"/>.</exception>
            <returns>The configuration builder.</returns>
        </member>
        <member name="M:Microsoft.Extensions.Configuration.UserSecretsConfigurationExtensions.AddUserSecrets(Microsoft.Extensions.Configuration.IConfigurationBuilder,System.String)">
            <summary>
            <para>
            Adds the user secrets configuration source with specified user secrets ID.
            </para>
            <para>
            A user secrets ID is unique value used to store and identify a collection of secret configuration values.
            </para>
            </summary>
            <param name="configuration">The configuration builder.</param>
            <param name="userSecretsId">The user secrets ID.</param>
            <returns>The configuration builder.</returns>
        </member>
        <member name="M:Microsoft.Extensions.Configuration.UserSecretsConfigurationExtensions.AddUserSecrets(Microsoft.Extensions.Configuration.IConfigurationBuilder,System.String,System.Boolean)">
            <summary>
            <para>
            Adds the user secrets configuration source with specified user secrets ID.
            </para>
            <para>
            A user secrets ID is unique value used to store and identify a collection of secret configuration values.
            </para>
            </summary>
            <param name="configuration">The configuration builder.</param>
            <param name="userSecretsId">The user secrets ID.</param>
            <param name="reloadOnChange">Whether the configuration should be reloaded if the file changes.</param>
            <returns>The configuration builder.</returns>
        </member>
        <member name="M:System.ThrowHelper.ThrowIfNull(System.Object,System.String)">
            <summary>Throws an <see cref="T:System.ArgumentNullException"/> if <paramref name="argument"/> is null.</summary>
            <param name="argument">The reference type argument to validate as non-null.</param>
            <param name="paramName">The name of the parameter with which <paramref name="argument"/> corresponds.</param>
        </member>
        <member name="M:System.ThrowHelper.IfNullOrWhitespace(System.String,System.String)">
            <summary>
            Throws either an <see cref="T:System.ArgumentNullException"/> or an <see cref="T:System.ArgumentException"/>
            if the specified string is <see langword="null"/> or whitespace respectively.
            </summary>
            <param name="argument">String to be checked for <see langword="null"/> or whitespace.</param>
            <param name="paramName">The name of the parameter being checked.</param>
            <returns>The original value of <paramref name="argument"/>.</returns>
        </member>
        <member name="P:System.SR.Common_StringNullOrEmpty">
            <summary>Value cannot be null or an empty string.</summary>
        </member>
        <member name="P:System.SR.Error_Invalid_Character_In_UserSecrets_Id">
            <summary>Invalid character '{0}' found in the user secrets ID at index '{1}'.</summary>
        </member>
        <member name="P:System.SR.Error_Missing_UserSecretsIdAttribute">
            <summary>Could not find 'UserSecretsIdAttribute' on assembly '{0}'.
            Check that the project for '{0}' has set the 'UserSecretsId' build property.
            If the 'UserSecretsId' property is already set then add a reference to the Microsoft.Extensions.Configuration.UserSecret ...</summary>
        </member>
        <member name="P:System.SR.Error_Missing_UserSecretsLocation">
            <summary>Could not determine an appropriate location for storing user secrets. Set the {0} environment variable to a folder where user secrets should be stored.</summary>
        </member>
        <member name="T:System.Runtime.InteropServices.LibraryImportAttribute">
            <summary>
            Attribute used to indicate a source generator should create a function for marshalling
            arguments instead of relying on the runtime to generate an equivalent marshalling function at run-time.
            </summary>
            <remarks>
            This attribute is meaningless if the source generator associated with it is not enabled.
            The current built-in source generator only supports C# and only supplies an implementation when
            applied to static, partial, non-generic methods.
            </remarks>
        </member>
        <member name="M:System.Runtime.InteropServices.LibraryImportAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Runtime.InteropServices.LibraryImportAttribute"/>.
            </summary>
            <param name="libraryName">Name of the library containing the import.</param>
        </member>
        <member name="P:System.Runtime.InteropServices.LibraryImportAttribute.LibraryName">
            <summary>
            Gets the name of the library containing the import.
            </summary>
        </member>
        <member name="P:System.Runtime.InteropServices.LibraryImportAttribute.EntryPoint">
            <summary>
            Gets or sets the name of the entry point to be called.
            </summary>
        </member>
        <member name="P:System.Runtime.InteropServices.LibraryImportAttribute.StringMarshalling">
            <summary>
            Gets or sets how to marshal string arguments to the method.
            </summary>
            <remarks>
            If this field is set to a value other than <see cref="F:System.Runtime.InteropServices.StringMarshalling.Custom" />,
            <see cref="P:System.Runtime.InteropServices.LibraryImportAttribute.StringMarshallingCustomType" /> must not be specified.
            </remarks>
        </member>
        <member name="P:System.Runtime.InteropServices.LibraryImportAttribute.StringMarshallingCustomType">
            <summary>
            Gets or sets the <see cref="T:System.Type"/> used to control how string arguments to the method are marshalled.
            </summary>
            <remarks>
            If this field is specified, <see cref="P:System.Runtime.InteropServices.LibraryImportAttribute.StringMarshalling" /> must not be specified
            or must be set to <see cref="F:System.Runtime.InteropServices.StringMarshalling.Custom" />.
            </remarks>
        </member>
        <member name="P:System.Runtime.InteropServices.LibraryImportAttribute.SetLastError">
            <summary>
            Gets or sets whether the callee sets an error (SetLastError on Windows or errno
            on other platforms) before returning from the attributed method.
            </summary>
        </member>
        <member name="T:System.Runtime.InteropServices.StringMarshalling">
            <summary>
            Specifies how strings should be marshalled for generated p/invokes
            </summary>
        </member>
        <member name="F:System.Runtime.InteropServices.StringMarshalling.Custom">
            <summary>
            Indicates the user is suppling a specific marshaller in <see cref="P:System.Runtime.InteropServices.LibraryImportAttribute.StringMarshallingCustomType"/>.
            </summary>
        </member>
        <member name="F:System.Runtime.InteropServices.StringMarshalling.Utf8">
            <summary>
            Use the platform-provided UTF-8 marshaller.
            </summary>
        </member>
        <member name="F:System.Runtime.InteropServices.StringMarshalling.Utf16">
            <summary>
            Use the platform-provided UTF-16 marshaller.
            </summary>
        </member>
    </members>
</doc>
