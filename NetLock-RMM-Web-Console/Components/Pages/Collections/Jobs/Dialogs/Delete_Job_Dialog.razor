@using MySqlConnector;
@using System.Data.Common;
@using System.Text.Json;

@inject NavigationManager NavigationManager
@inject ILocalStorageService localStorage
@inject IDialogService DialogService
@inject ISnackbar Snackbar
@inject IStringLocalizer<Pages.Collections.Jobs.Dialogs.Delete_Job_Dialog> Localizer

<AuthorizeView>
    <NotAuthorized>
        @{
            NavigationManager.NavigateTo("/");
        }
    </NotAuthorized>

    <Authorized>

        <MudDialog>
            <TitleContent>
                <MudText Typo="Typo.h5">@Localizer["delete"]</MudText>
            </TitleContent>
            <DialogContent>
                <MudText>@Localizer["text"]</MudText>
            </DialogContent>

            <DialogActions>
                <MudButton Size="Size.Small" OnClick="Cancel">@Localizer["cancel"]</MudButton>
                <MudButton Size="Size.Small" OnClick="OK" Variant="@Variant.Filled" Color="@Color.Error">@Localizer["delete"]</MudButton>
            </DialogActions>
        </MudDialog>

    </Authorized>
</AuthorizeView>

@code {

    [CascadingParameter] MudDialogInstance MudDialog { get; set; }
    [Parameter] public string id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        
    }

    private async Task OK()
    {
        this.Snackbar.Configuration.ShowCloseIcon = true;
        this.Snackbar.Configuration.PositionClass = Defaults.Classes.Position.BottomRight;

        bool success = false;

        MySqlConnection conn = new MySqlConnection(Configuration.MySQL.Connection_String);

        try
        {
            await conn.OpenAsync();

            string execute_query = "DELETE FROM jobs WHERE id = @id;";

            MySqlCommand cmd = new MySqlCommand(execute_query, conn);
            cmd.Parameters.AddWithValue("@id", id);
            cmd.ExecuteNonQuery();

            success = true;
        }
        catch (Exception ex)
        {
            Logging.Handler.Error("/manage_scripts (Delete_Script_Dialog) -> OK", "Result", ex.ToString());
        }
        finally
        {
            await conn.CloseAsync();
        }

        if (success)
        {
            await Classes.MySQL.Database.Reset_Device_Sync(true, String.Empty);
            this.MudDialog.Close(DialogResult.Ok("success"));
        }
        else
        {
            this.Snackbar.Add(Localizer["error_occurred"], Severity.Error);
            this.MudDialog.Close(DialogResult.Ok("error"));
        }
    }

    private void Cancel() => MudDialog.Cancel();
}
