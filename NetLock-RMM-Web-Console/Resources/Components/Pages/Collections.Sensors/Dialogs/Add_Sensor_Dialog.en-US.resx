<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="action" xml:space="preserve">
    <value>Action</value>
  </data>
  <data name="action_treshold_failures_max" xml:space="preserve">
    <value>Action after X failures in a row.</value>
  </data>
  <data name="action_treshold_hits_max" xml:space="preserve">
    <value>Action after X hits in a row</value>
  </data>
  <data name="action_treshold_hits_max_tooltip" xml:space="preserve">
    <value>How many consecutive sensor strokes are required until the PowerShell code action is executed.</value>
  </data>
  <data name="action_treshold_max" xml:space="preserve">
    <value>Action after X threshold exceedances.</value>
  </data>
  <data name="action_treshold_max_tooltip" xml:space="preserve">
    <value>How many consecutive threshold crossings are required before the PowerShell code action is executed.</value>
  </data>
  <data name="add" xml:space="preserve">
    <value>Add</value>
  </data>
  <data name="already_exists" xml:space="preserve">
    <value>Already exists.</value>
  </data>
  <data name="auto_reset" xml:space="preserve">
    <value>Automatic reset</value>
  </data>
  <data name="auto_reset_tooltip" xml:space="preserve">
    <value>If the sensor does not strike, the notification and action counter is reset. This ensures that a notification or action is only triggered if the sensor strikes the threshold number of times in succession.</value>
  </data>
  <data name="cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="category" xml:space="preserve">
    <value>Category</value>
  </data>
  <data name="confirm" xml:space="preserve">
    <value>Confirm</value>
  </data>
  <data name="critical" xml:space="preserve">
    <value>Critical</value>
  </data>
  <data name="custom" xml:space="preserve">
    <value>Custom</value>
  </data>
  <data name="date" xml:space="preserve">
    <value>Date</value>
  </data>
  <data name="description" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="disk_minimum_capacity" xml:space="preserve">
    <value>Only check drives with a capacity of X gigabytes or more.</value>
  </data>
  <data name="disk_minimum_capacity_tooltip" xml:space="preserve">
    <value>Determines the minimum capacity a drive (partition) must have for it to be monitored. 0 = does not matter.</value>
  </data>
  <data name="drive" xml:space="preserve">
    <value>Drive</value>
  </data>
  <data name="drive_letter" xml:space="preserve">
    <value>Drive letters</value>
  </data>
  <data name="drive_letter_tooltip" xml:space="preserve">
    <value>Letters are separated by commas. For example: C,D,G If no letter is specified, all drives are checked.</value>
  </data>
  <data name="drive_used_less_than_x_%" xml:space="preserve">
    <value>Less than X percent free</value>
  </data>
  <data name="drive_used_less_than_x_gb" xml:space="preserve">
    <value>Less than X GB free</value>
  </data>
  <data name="drive_used_more_or_less_than_x_%_tooltip" xml:space="preserve">
    <value>Triggered when the following threshold value (percentage) is exceeded.</value>
  </data>
  <data name="drive_used_more_or_less_than_x_gb_tooltip" xml:space="preserve">
    <value>Triggered when the following threshold value (GB) is exceeded.</value>
  </data>
  <data name="drive_used_more_than_x_%" xml:space="preserve">
    <value>More than X percent occupied</value>
  </data>
  <data name="drive_used_more_than_x_gb" xml:space="preserve">
    <value>More than X GB occupied</value>
  </data>
  <data name="error_occurred" xml:space="preserve">
    <value>An error has occurred.</value>
  </data>
  <data name="eventlog_application" xml:space="preserve">
    <value>Application</value>
  </data>
  <data name="eventlog_security" xml:space="preserve">
    <value>Security</value>
  </data>
  <data name="eventlog_setup" xml:space="preserve">
    <value>Setup</value>
  </data>
  <data name="event_id" xml:space="preserve">
    <value>Event ID</value>
  </data>
  <data name="event_id_tooltip_expected_result" xml:space="preserve">
    <value>If the field remains empty, only the event ID is checked.</value>
  </data>
  <data name="expected_result" xml:space="preserve">
    <value>Expected result</value>
  </data>
  <data name="failed" xml:space="preserve">
    <value>Failed</value>
  </data>
  <data name="friday" xml:space="preserve">
    <value>Friday</value>
  </data>
  <data name="high" xml:space="preserve">
    <value>High</value>
  </data>
  <data name="hours" xml:space="preserve">
    <value>Hours</value>
  </data>
  <data name="if..." xml:space="preserve">
    <value>If...</value>
  </data>
  <data name="ip_address/hostname" xml:space="preserve">
    <value>IP address/hostname</value>
  </data>
  <data name="low" xml:space="preserve">
    <value>Low</value>
  </data>
  <data name="minutes" xml:space="preserve">
    <value>Minutes</value>
  </data>
  <data name="moderate" xml:space="preserve">
    <value>Moderate</value>
  </data>
  <data name="monday" xml:space="preserve">
    <value>Monday</value>
  </data>
  <data name="name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="network_drives" xml:space="preserve">
    <value>Network drives</value>
  </data>
  <data name="network_drives_tooltip" xml:space="preserve">
    <value>Checks mounted network drives.</value>
  </data>
  <data name="notifications" xml:space="preserve">
    <value>Notifications</value>
  </data>
  <data name="notifications_mail_tooltip" xml:space="preserve">
    <value>Send notifications by e-mail.</value>
  </data>
  <data name="notifications_microsoft_teams_tooltip" xml:space="preserve">
    <value>Send notifications via Microsoft Teams.</value>
  </data>
  <data name="notifications_ntfy_sh_tooltip" xml:space="preserve">
    <value>Send notifications via ntfy.sh.</value>
  </data>
  <data name="notifications_telegram_tooltip" xml:space="preserve">
    <value>Send notifications via Telegram.</value>
  </data>
  <data name="notification_treshold_failures_max" xml:space="preserve">
    <value>Notification after X consecutive failures.</value>
  </data>
  <data name="notification_treshold_hits_max" xml:space="preserve">
    <value>Notification after X hits in a row</value>
  </data>
  <data name="notification_treshold_hits_max_tooltip" xml:space="preserve">
    <value>How many consecutive sensor strokes are required before a notification is sent.</value>
  </data>
  <data name="notification_treshold_max" xml:space="preserve">
    <value>Notification after X threshold values exceeded.</value>
  </data>
  <data name="notification_treshold_max_tooltip" xml:space="preserve">
    <value>How many threshold exceedances are required before a notification is sent.</value>
  </data>
  <data name="ping_status" xml:space="preserve">
    <value>Ping-Status</value>
  </data>
  <data name="platform" xml:space="preserve">
    <value>Platform</value>
  </data>
  <data name="processor" xml:space="preserve">
    <value>Processor</value>
  </data>
  <data name="process_cpu_utilization (%)" xml:space="preserve">
    <value>Process CPU utilization (%)</value>
  </data>
  <data name="process_cpu_utilization (%)_tooltip" xml:space="preserve">
    <value>Example: explorer.exe</value>
  </data>
  <data name="process_name" xml:space="preserve">
    <value>Process name</value>
  </data>
  <data name="process_ram_utilization (%)" xml:space="preserve">
    <value>Process RAM utilization (%)</value>
  </data>
  <data name="process_ram_utilization (MB)" xml:space="preserve">
    <value>Process RAM usage (MB)</value>
  </data>
  <data name="ram" xml:space="preserve">
    <value>RAM</value>
  </data>
  <data name="regex_supported_tooltip" xml:space="preserve">
    <value>Regular expressions (regex) are supported.</value>
  </data>
  <data name="removable_drives" xml:space="preserve">
    <value>Removable disk</value>
  </data>
  <data name="removable_drives_tooltip" xml:space="preserve">
    <value>Checks inserted removable media.</value>
  </data>
  <data name="required" xml:space="preserve">
    <value>Required</value>
  </data>
  <data name="rule" xml:space="preserve">
    <value>Rule</value>
  </data>
  <data name="saturday" xml:space="preserve">
    <value>Saturday</value>
  </data>
  <data name="schedule" xml:space="preserve">
    <value>Schedule</value>
  </data>
  <data name="schedule_date_time" xml:space="preserve">
    <value>Date &amp; time</value>
  </data>
  <data name="schedule_date_x_hours" xml:space="preserve">
    <value>Date, every X hours</value>
  </data>
  <data name="schedule_date_x_minutes" xml:space="preserve">
    <value>Date, every X minutes</value>
  </data>
  <data name="schedule_date_x_seconds" xml:space="preserve">
    <value>Date, every X seconds</value>
  </data>
  <data name="schedule_days_x_hours" xml:space="preserve">
    <value>On the following days, every X hours</value>
  </data>
  <data name="schedule_days_x_minutes" xml:space="preserve">
    <value>On the following days, every X minutes</value>
  </data>
  <data name="schedule_days_x_seconds" xml:space="preserve">
    <value>On the following days, every X seconds</value>
  </data>
  <data name="schedule_days_x_time" xml:space="preserve">
    <value>On the following days at X o'clock</value>
  </data>
  <data name="schedule_system_boot" xml:space="preserve">
    <value>Boot</value>
  </data>
  <data name="schedule_x_hours" xml:space="preserve">
    <value>Every X hours</value>
  </data>
  <data name="schedule_x_minutes" xml:space="preserve">
    <value>Every X minutes</value>
  </data>
  <data name="schedule_x_seconds" xml:space="preserve">
    <value>Every X Seconds</value>
  </data>
  <data name="script" xml:space="preserve">
    <value>Script</value>
  </data>
  <data name="seconds" xml:space="preserve">
    <value>Seconds</value>
  </data>
  <data name="service" xml:space="preserve">
    <value>Service</value>
  </data>
  <data name="service_action" xml:space="preserve">
    <value>Service action</value>
  </data>
  <data name="service_action_restart" xml:space="preserve">
    <value>Restart</value>
  </data>
  <data name="service_action_start" xml:space="preserve">
    <value>Start</value>
  </data>
  <data name="service_action_stop" xml:space="preserve">
    <value>Stop</value>
  </data>
  <data name="service_name" xml:space="preserve">
    <value>Service name</value>
  </data>
  <data name="service_status" xml:space="preserve">
    <value>Service status</value>
  </data>
  <data name="service_status_paused" xml:space="preserve">
    <value>Paused</value>
  </data>
  <data name="service_status_running" xml:space="preserve">
    <value>Running</value>
  </data>
  <data name="service_status_stopped" xml:space="preserve">
    <value>Stopped</value>
  </data>
  <data name="severity" xml:space="preserve">
    <value>Severity</value>
  </data>
  <data name="sub_category" xml:space="preserve">
    <value>Sub category</value>
  </data>
  <data name="successful" xml:space="preserve">
    <value>Successful</value>
  </data>
  <data name="sunday" xml:space="preserve">
    <value>Sunday</value>
  </data>
  <data name="thursday" xml:space="preserve">
    <value>Thursday</value>
  </data>
  <data name="time" xml:space="preserve">
    <value>Time</value>
  </data>
  <data name="timeout_milliseconds" xml:space="preserve">
    <value>Timeout (milliseconds)</value>
  </data>
  <data name="tuesday" xml:space="preserve">
    <value>Tuesday</value>
  </data>
  <data name="type" xml:space="preserve">
    <value>Type</value>
  </data>
  <data name="utilization" xml:space="preserve">
    <value>Utilization</value>
  </data>
  <data name="wednesday" xml:space="preserve">
    <value>Wednesday</value>
  </data>
</root>